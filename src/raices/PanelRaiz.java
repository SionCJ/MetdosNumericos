
package raices;

import general.*;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sion
 */
public class PanelRaiz extends javax.swing.JPanel {
    
    int itemMetodo, estadoAnterior;
    RaizFuncion rf;
    EnumFuncion enumfunc;
    /**
     * Creates new form PanelRaiz
     */
    public PanelRaiz() {
        initComponents();
        estadoAnterior = 0;
        ((CardLayout) pnlCardMetodo.getLayout()).first(pnlCardMetodo);
        //btnElegirGx.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup = new javax.swing.ButtonGroup();
        plano = new taylor.Plano();
        pnlControles = new javax.swing.JPanel();
        pnlOpciones = new javax.swing.JPanel();
        lblPunto0 = new javax.swing.JLabel();
        txtfPunto0 = new javax.swing.JTextField();
        lblPunto1 = new javax.swing.JLabel();
        txtfPunto1 = new javax.swing.JTextField();
        lblTolerancia = new javax.swing.JLabel();
        txtf_TolerBase = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtf_TolerExp = new javax.swing.JTextField();
        lblNumIter = new javax.swing.JLabel();
        spinNumIter = new javax.swing.JSpinner();
        btnCalcular = new javax.swing.JButton();
        txtfResultado = new javax.swing.JTextField();
        pnlIntVista = new javax.swing.JPanel();
        txtf_xMin = new javax.swing.JTextField();
        lbl_xVista = new javax.swing.JLabel();
        txtf_xMax = new javax.swing.JTextField();
        btnEstablecerVista = new javax.swing.JButton();
        cboxMetodo = new javax.swing.JComboBox();
        lblMetodo = new javax.swing.JLabel();
        pnlCardMetodo = new javax.swing.JPanel();
        pnlSelecFuncion = new javax.swing.JPanel();
        lblFx1 = new javax.swing.JLabel();
        lblFx5 = new javax.swing.JLabel();
        lblFx2 = new javax.swing.JLabel();
        lblFx3 = new javax.swing.JLabel();
        lblFx4 = new javax.swing.JLabel();
        rbtnFx1 = new javax.swing.JRadioButton();
        rbtnFx5 = new javax.swing.JRadioButton();
        rbtnFx3 = new javax.swing.JRadioButton();
        rbtnFx2 = new javax.swing.JRadioButton();
        rbtnFx4 = new javax.swing.JRadioButton();
        pnlPuntoFijo = new raices.PanelPuntoFijo();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.BorderLayout());

        plano.setPreferredSize(new java.awt.Dimension(500, 450));

        javax.swing.GroupLayout planoLayout = new javax.swing.GroupLayout(plano);
        plano.setLayout(planoLayout);
        planoLayout.setHorizontalGroup(
            planoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );
        planoLayout.setVerticalGroup(
            planoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        add(plano, java.awt.BorderLayout.CENTER);

        pnlControles.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));
        pnlControles.setMinimumSize(new java.awt.Dimension(100, 100));
        pnlControles.setPreferredSize(new java.awt.Dimension(400, 450));
        pnlControles.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPunto0.setText("Aproximacion Pto 1");

        txtfPunto0.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfPunto0.setText("1");
        txtfPunto0.setMinimumSize(new java.awt.Dimension(80, 20));
        txtfPunto0.setPreferredSize(new java.awt.Dimension(80, 25));

        lblPunto1.setText("Aproximacion Pto 2");

        txtfPunto1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfPunto1.setText("2");
        txtfPunto1.setPreferredSize(new java.awt.Dimension(80, 25));

        lblTolerancia.setText("Tolerancia");

        txtf_TolerBase.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtf_TolerBase.setText("10");
        txtf_TolerBase.setPreferredSize(new java.awt.Dimension(30, 25));

        jLabel6.setText("^");

        txtf_TolerExp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtf_TolerExp.setText("-4");
        txtf_TolerExp.setToolTipText("");
        txtf_TolerExp.setPreferredSize(new java.awt.Dimension(40, 25));

        lblNumIter.setText("Iteraciones");

        spinNumIter.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(20), Integer.valueOf(0), null, Integer.valueOf(1)));
        spinNumIter.setPreferredSize(new java.awt.Dimension(60, 25));

        btnCalcular.setText("Calcular");
        btnCalcular.setPreferredSize(new java.awt.Dimension(75, 25));
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        txtfResultado.setEditable(false);
        txtfResultado.setBackground(new java.awt.Color(230, 255, 230));
        txtfResultado.setAutoscrolls(false);
        txtfResultado.setPreferredSize(new java.awt.Dimension(75, 25));

        javax.swing.GroupLayout pnlOpcionesLayout = new javax.swing.GroupLayout(pnlOpciones);
        pnlOpciones.setLayout(pnlOpcionesLayout);
        pnlOpcionesLayout.setHorizontalGroup(
            pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOpcionesLayout.createSequentialGroup()
                .addGroup(pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOpcionesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtfResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlOpcionesLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlOpcionesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPunto0)
                            .addComponent(lblPunto1)
                            .addComponent(lblTolerancia)
                            .addComponent(lblNumIter))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfPunto0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtfPunto1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlOpcionesLayout.createSequentialGroup()
                                .addComponent(txtf_TolerBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtf_TolerExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(spinNumIter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlOpcionesLayout.setVerticalGroup(
            pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOpcionesLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfPunto0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPunto0))
                .addGap(5, 5, 5)
                .addGroup(pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfPunto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPunto1))
                .addGap(5, 5, 5)
                .addGroup(pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtf_TolerExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtf_TolerBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTolerancia))
                .addGap(4, 4, 4)
                .addGroup(pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumIter)
                    .addComponent(spinNumIter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtfResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlControles.add(pnlOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 200, 240));

        pnlIntVista.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Intervalo de Vista", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        txtf_xMin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtf_xMin.setText("1");
        txtf_xMin.setPreferredSize(new java.awt.Dimension(50, 25));

        lbl_xVista.setText("<  X  <");

        txtf_xMax.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtf_xMax.setText("2");
        txtf_xMax.setPreferredSize(new java.awt.Dimension(50, 25));

        btnEstablecerVista.setText("Aceptar");
        btnEstablecerVista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstablecerVistaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlIntVistaLayout = new javax.swing.GroupLayout(pnlIntVista);
        pnlIntVista.setLayout(pnlIntVistaLayout);
        pnlIntVistaLayout.setHorizontalGroup(
            pnlIntVistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIntVistaLayout.createSequentialGroup()
                .addComponent(txtf_xMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(lbl_xVista, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtf_xMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
            .addGroup(pnlIntVistaLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(btnEstablecerVista)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlIntVistaLayout.setVerticalGroup(
            pnlIntVistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIntVistaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlIntVistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtf_xMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_xVista)
                    .addComponent(txtf_xMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEstablecerVista))
        );

        pnlControles.add(pnlIntVista, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, 200, 100));

        cboxMetodo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Biseccion", "Newton", "Secante", "Regla falsa", "Regla falsa Modificada", "Punto fijo" }));
        cboxMetodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxMetodoItemStateChanged(evt);
            }
        });
        pnlControles.add(cboxMetodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, -1, -1));

        lblMetodo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblMetodo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMetodo.setText("Metodo de Solucion");
        pnlControles.add(lblMetodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, -1));

        pnlCardMetodo.setLayout(new java.awt.CardLayout());

        pnlSelecFuncion.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Funcion", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        lblFx1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/taylor/recursos/fx1_10p.png"))); // NOI18N

        lblFx5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/taylor/recursos/fx5_10p.png"))); // NOI18N

        lblFx2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/taylor/recursos/fx2_10p.png"))); // NOI18N

        lblFx3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/taylor/recursos/fx3_10p.png"))); // NOI18N

        lblFx4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/taylor/recursos/fx4_10p.png"))); // NOI18N

        btnGroup.add(rbtnFx1);
        rbtnFx1.setSelected(true);

        btnGroup.add(rbtnFx5);

        btnGroup.add(rbtnFx3);

        btnGroup.add(rbtnFx2);

        btnGroup.add(rbtnFx4);

        javax.swing.GroupLayout pnlSelecFuncionLayout = new javax.swing.GroupLayout(pnlSelecFuncion);
        pnlSelecFuncion.setLayout(pnlSelecFuncionLayout);
        pnlSelecFuncionLayout.setHorizontalGroup(
            pnlSelecFuncionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecFuncionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSelecFuncionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlSelecFuncionLayout.createSequentialGroup()
                        .addComponent(rbtnFx5)
                        .addGap(18, 18, 18)
                        .addComponent(lblFx5))
                    .addGroup(pnlSelecFuncionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlSelecFuncionLayout.createSequentialGroup()
                            .addComponent(rbtnFx1)
                            .addGap(18, 18, 18)
                            .addComponent(lblFx1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlSelecFuncionLayout.createSequentialGroup()
                            .addComponent(rbtnFx2)
                            .addGap(18, 18, 18)
                            .addComponent(lblFx2))
                        .addGroup(pnlSelecFuncionLayout.createSequentialGroup()
                            .addComponent(rbtnFx3)
                            .addGap(18, 18, 18)
                            .addComponent(lblFx3))
                        .addGroup(pnlSelecFuncionLayout.createSequentialGroup()
                            .addComponent(rbtnFx4)
                            .addGap(18, 18, 18)
                            .addComponent(lblFx4))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSelecFuncionLayout.setVerticalGroup(
            pnlSelecFuncionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSelecFuncionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSelecFuncionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblFx1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtnFx1))
                .addGap(29, 29, 29)
                .addGroup(pnlSelecFuncionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnFx2)
                    .addComponent(lblFx2))
                .addGap(27, 27, 27)
                .addGroup(pnlSelecFuncionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSelecFuncionLayout.createSequentialGroup()
                        .addComponent(lblFx3)
                        .addGap(24, 24, 24)
                        .addComponent(lblFx4))
                    .addGroup(pnlSelecFuncionLayout.createSequentialGroup()
                        .addComponent(rbtnFx3)
                        .addGap(27, 27, 27)
                        .addComponent(rbtnFx4)))
                .addGap(26, 26, 26)
                .addGroup(pnlSelecFuncionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnFx5)
                    .addComponent(lblFx5))
                .addContainerGap(111, Short.MAX_VALUE))
        );

        pnlCardMetodo.add(pnlSelecFuncion, "cardNoPtoFijo");
        pnlCardMetodo.add(pnlPuntoFijo, "cardPtoFijo");

        pnlControles.add(pnlCardMetodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 60, 180, 380));

        add(pnlControles, java.awt.BorderLayout.EAST);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 200));

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDatos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tblDatos);

        add(jScrollPane1, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents
    
    private void establecerVista(){
        double xmin, xmax, rango;
        Funcion func = new Funcion( enumfunc );
        try{
            xmin = Double.parseDouble( txtf_xMin.getText() );
            xmax = Double.parseDouble( txtf_xMax.getText() );
            if( xmin==xmax ){
                JOptionPane.showMessageDialog(null, "Los puntos no deben ser iguales", "Error en Datos", JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if( xmin>xmax ){
                double aux = xmin;
                xmin = xmax;
                xmax = aux;
                txtf_xMin.setText(""+xmin);
                txtf_xMax.setText(""+xmax);
            }
            rango = xmax-xmin;
            DoublePar minMax = func.minMax(xmin, xmax, plano.getWidth()/2 );
            System.out.println("yMin = "+minMax.pto1+"\tyMax = "+minMax.pto2);
            System.out.println("Rango "+rango);
            plano.setNumPtos( plano.getWidth()/2 );
            System.out.println("yMin - rango = "+(minMax.pto1-rango) );
            //plano.setPuerto(xmin-rango/5, xmax+rango/5, minMax.pto1-rango, minMax.pto2+rango);
            plano.setPuerto(xmin, xmax, minMax.pto1, minMax.pto2);
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Los datos deben ser numericos", "Error en Datos", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void btnEstablecerVistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstablecerVistaActionPerformed
        establecerVista();
        this.update( plano.getGraphics() );
    }//GEN-LAST:event_btnEstablecerVistaActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        double p0, p1, toler, tolerBase, tolerExp, raiz=0;
        int numIter;
        //EnumFuncion enumfunc;
        
        plano.eliminarFunciones();
        txtfResultado.setBackground( new Color(230, 255, 230) );
        itemMetodo = cboxMetodo.getSelectedIndex();
        if( itemMetodo==5 ){
            enumfunc = pnlPuntoFijo.getFuncionFx();
            //JOptionPane.showMessageDialog(null, "get PuntoFijo\n"+cboxMetodo.getSelectedItem().toString());
        }
        else{
            enumfunc = getFuncSelected();
            //JOptionPane.showMessageDialog(null, "get PnlRaiz\n"+cboxMetodo.getSelectedItem().toString());
        }
        try{
            p0 = Double.parseDouble( txtfPunto0.getText() );
            p1 = Double.parseDouble( txtfPunto1.getText() );
            tolerBase = Double.parseDouble( txtf_TolerBase.getText() );
            tolerExp = Double.parseDouble( txtf_TolerExp.getText() );
            toler = Math.pow(tolerBase, tolerExp);
            if( itemMetodo!=1 || itemMetodo!=5 ){
                System.out.println("Metodo no es Newton");
                if( p0==p1 ){
                    JOptionPane.showMessageDialog(null, "Los puntos no deben ser iguales", "Error en Datos", JOptionPane.ERROR_MESSAGE);
                }
                else if( p0>p1 ){
                System.out.println("Intercambiando puntos");
                    double aux = p0;
                    p0 = p1;
                    p1 = aux;
                    txtfPunto0.setText(""+p0);
                    txtfPunto1.setText(""+p1);
                }
            }

            Funcion func = new Funcion(enumfunc);
            numIter = (int) spinNumIter.getValue();
            rf = new RaizFuncion( func );
            switch( itemMetodo ){
                case 0: raiz = rf.biseccion(p0, p1, toler, numIter);
                break;
                case 1: raiz = rf.newton(p0, toler, numIter, new Funcion( getItemFuncDerivada() ) );
                break;
                case 2: raiz = rf.secante(p0, p1, toler, numIter);
                break;
                case 3: raiz = rf.reglaFalsa2(p0, p1, toler, numIter);
                break;
                case 4: raiz = rf.reglaFalsaModificada(p0, p1, toler, numIter);
                break;
                case 5: raiz = rf.puntoFijo(p0, toler, numIter, new Funcion( pnlPuntoFijo.getFuncionGx() ));
                        plano.addFuncion( new Funcion(EnumFuncion.X, Color.red) );
                        plano.addFuncion( new Funcion(pnlPuntoFijo.getFuncionGx(), Color.blue) );
//                    plano.addFuncion( new Funcion(EnumFuncion.GX_A1, Color.blue) );
//                    plano.addFuncion( new Funcion(EnumFuncion.GX_A2, Color.cyan) );
//                    plano.addFuncion( new Funcion(EnumFuncion.GX_A4, Color.green) );
                    break;
            }
            tblDatos.setModel( rf.getTblmodelDatos() );
            txtfResultado.setText( ""+raiz );
            //txtfResultado.setText( String.format("%.12f", raiz) );
            
            establecerVista();
            plano.addFuncion(func);
            System.out.println("Graficando ...");
            this.update( plano.getGraphics() );
            System.out.println("Listo !!!");
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Los datos deben ser numericos", "Error en Datos", JOptionPane.ERROR_MESSAGE);
        }catch(RaizNotFoundException ex){
            txtfResultado.setBackground( new Color(255, 230, 230) );
            txtfResultado.setText("");
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Raiz no encontrada", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void cboxMetodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxMetodoItemStateChanged
        if( cboxMetodo.getSelectedIndex()==1 )
            txtfPunto1.setEnabled(false);
        else if( cboxMetodo.getSelectedIndex()==5 ){
            txtfPunto1.setEnabled(false);
            CardLayout card = (CardLayout) pnlCardMetodo.getLayout();
            card.show(pnlCardMetodo, "cardPtoFijo");
//            JOptionPane.showMessageDialog(null, "(5) "+cboxMetodo.getSelectedItem().toString());
//            JOptionPane.showMessageDialog(null, "(5) "+cboxMetodo.getSelectedIndex() );
            estadoAnterior = 5;
        }
        else{
            txtfPunto1.setEnabled(true);
//            JOptionPane.showMessageDialog(null, cboxMetodo.getSelectedItem().toString());
//            JOptionPane.showMessageDialog(null, cboxMetodo.getSelectedIndex() );
            if( estadoAnterior==5 ){
            //JOptionPane.showMessageDialog(null, "Entre" );
                CardLayout card = (CardLayout) pnlCardMetodo.getLayout();
                card.show(pnlCardMetodo, "cardNoPtoFijo");
                estadoAnterior = 0;
            }
        }
    }//GEN-LAST:event_cboxMetodoItemStateChanged

    @Override
    public void paint(Graphics g){
            System.out.println("Paint() class=PanelRaiz]");
        super.paint(g);
            System.out.println("super.paint() ejecutado");
        g.setColor(Color.red);
        try{
            double pi, fpi, p0, p1, fp0, fp1;
            int alto = plano.getHeight(), i;
            Transformacion Tx=plano.getTx(), Ty=plano.getTy();
            DefaultTableModel tblmodel = rf.getTblmodelDatos();     // se obtiene la tabla q se muestra en la ventana del objeto RaizFuncion rf
            
            switch( itemMetodo )
            {
                // Biseccion
                case 0:
            System.out.println("Graficando Biseccion");
                    pi = (double) tblmodel.getValueAt(0, 1);
                    fpi = rf.f.evaluar(pi);
                    g.fillOval(Tx.transforma(pi)-2, alto-Ty.transforma(fpi)-2, 4, 4);
                    g.drawLine(Tx.transforma(pi), alto-Ty.transforma(0)-10, Tx.transforma(pi), alto-Ty.transforma(0)+10);
                    pi = (double) tblmodel.getValueAt(0, 2);
                    fpi = rf.f.evaluar(pi);
                    g.fillOval(Tx.transforma(pi)-2, alto-Ty.transforma(fpi)-2, 4, 4);
                    g.drawLine(Tx.transforma(pi), alto-Ty.transforma(0)-10, Tx.transforma(pi), alto-Ty.transforma(0)+10);
                    for( i=0; i<tblmodel.getRowCount()-1; i++){
                        pi = (double) tblmodel.getValueAt(i, 3);
                        fpi = (double) tblmodel.getValueAt(i, 4);
                        g.fillOval(Tx.transforma(pi)-2, alto-Ty.transforma(fpi)-2, 4, 4);
                        g.drawLine(Tx.transforma(pi), alto-Ty.transforma(0)-10, Tx.transforma(pi), alto-Ty.transforma(0)+10);
                    }
                    g.setColor(Color.blue);
                    pi = (double) tblmodel.getValueAt(i, 3);
                    fpi = (double) tblmodel.getValueAt(i, 4);
                    g.fillOval(Tx.transforma(pi)-2, alto-Ty.transforma(fpi)-2, 4, 4);
            System.out.println("Biseccion graficada");
                    break;
                // Newton
                case 1:
//                    p1 = (double) tblmodel.getValueAt(0, 1);
//                    fp1 = (double) tblmodel.getValueAt(0, 2);
//                    g.fillOval(Tx.transforma(p1)-2, alto-Ty.transforma(fp1)-2, 4, 4);
                    for( i=0; i<tblmodel.getRowCount()-1; i++){
                        p0 = (double) tblmodel.getValueAt(i, 1);
                        p1 = (double) tblmodel.getValueAt(i, 4);
                        fp0 = (double) tblmodel.getValueAt(i, 2);
                        //fp1 = (double) tblmodel.getValueAt(i, 2);
                        //System.out.println("("+pi+","+fpi+")");
                        g.fillOval(Tx.transforma(p0)-2, alto-Ty.transforma(fp0)-2, 4, 4);
                        g.fillOval(Tx.transforma(p1)-2, alto-Ty.transforma(0)-2, 4, 4);
                        g.drawLine( Tx.transforma(p0), alto-Ty.transforma(fp0), Tx.transforma(p1), alto-Ty.transforma(0));
                    }
                    g.setColor(Color.blue);
                    p0 = (double) tblmodel.getValueAt(i, 1);
                    p1 = (double) tblmodel.getValueAt(i, 4);
                    fp0 = (double) tblmodel.getValueAt(i, 2);
                    g.fillOval(Tx.transforma(p0)-2, alto-Ty.transforma(fp0)-2, 4, 4);
                    g.fillOval(Tx.transforma(p1)-2, alto-Ty.transforma(0)-2, 4, 4);
                    g.drawLine( Tx.transforma(p0), alto-Ty.transforma(fp0), Tx.transforma(p1), alto-Ty.transforma(0));
                    break;
                // Secante y Regla falsa
                case 2:
                case 3:
                    for( i=0; i<tblmodel.getRowCount()-1; i++){
                        p0 = (double) tblmodel.getValueAt(i, 1);
                        p1 = (double) tblmodel.getValueAt(i, 2);
                        fp0 = (double) tblmodel.getValueAt(i, 3);
                        fp1 = (double) tblmodel.getValueAt(i, 4);
                        //System.out.println("("+p0+","+p1+") ("+fp0+","+fp1+")");
                        g.fillOval(Tx.transforma(p0)-2, alto-Ty.transforma(fp0)-2, 4, 4);
                        g.fillOval(Tx.transforma(p1)-2, alto-Ty.transforma(fp1)-2, 4, 4);
                        g.drawLine( Tx.transforma(p0), alto-Ty.transforma(fp0), Tx.transforma(p1), alto-Ty.transforma(fp1));
                    }
                    g.setColor(Color.blue);
                    p0 = (double) tblmodel.getValueAt(i, 1);
                    p1 = (double) tblmodel.getValueAt(i, 2);
                    fp0 = (double) tblmodel.getValueAt(i, 3);
                    fp1 = (double) tblmodel.getValueAt(i, 4);
                    g.fillOval(Tx.transforma(p1)-2, alto-Ty.transforma(fp1)-2, 4, 4);
                    g.drawLine( Tx.transforma(p0), alto-Ty.transforma(fp0), Tx.transforma(p1), alto-Ty.transforma(fp1));
                break;
                // Regla falsa modificada
                case 4:
                        System.out.println("RFM ");
                    for( i=0; i<tblmodel.getRowCount(); i++){
                        p0 = (double) tblmodel.getValueAt(i, 1);
                        p1 = (double) tblmodel.getValueAt(i, 2);
                        fp0 = (double) tblmodel.getValueAt(i, 3);
                        fp1 = (double) tblmodel.getValueAt(i, 4);
                        //System.out.println("i: "+i+"("+p0+","+p1+") ("+fp0+","+fp1+")");
                        plano.dibujarLinea(p0, p1, fp0, fp1);
                        g.fillOval(Tx.transforma(p1)-2, alto-Ty.transforma(fp1)-2, 4, 4);
                        g.fillOval(Tx.transforma(p0)-2, alto-Ty.transforma(fp0)-2, 4, 4);
                        g.drawLine( Tx.transforma(p0), alto-Ty.transforma(fp0), Tx.transforma(p1), alto-Ty.transforma(fp1));
                        //g.drawLine(p0, p1, fp0, fp1);
                    }
                    g.setColor(Color.blue);
                    p0 = (double) tblmodel.getValueAt(i-2, 5);
                    p1 = (double) tblmodel.getValueAt(i-1, 5);
                    fp0 = (double) tblmodel.getValueAt(i-2, 6);
                    fp1 = (double) tblmodel.getValueAt(i-1, 6);
                    g.fillOval(Tx.transforma(p1)-2, alto-Ty.transforma(fp1)-2, 4, 4);
                    g.drawLine( Tx.transforma(p0), alto-Ty.transforma(fp0), Tx.transforma(p1), alto-Ty.transforma(fp1));
                break;
                case 5:
                    for( i=0; i<tblmodel.getRowCount()-1; i++){
                        p0 = (double) tblmodel.getValueAt(i, 1);
                        fp0 = (double) tblmodel.getValueAt(i, 2);
                        g.fillOval(Tx.transforma(p0)-2, alto-Ty.transforma(fp0)-2, 4, 4);
                        //g.drawLine(p0, p1, fp0, fp1);
                    }
                    g.setColor(Color.green);
                    p0 = (double) tblmodel.getValueAt(i, 1);
                    fp0 = (double) tblmodel.getValueAt(i, 2);
                    g.fillOval(Tx.transforma(p0)-2, alto-Ty.transforma(fp0)-2, 4, 4);
                    
            }
        }catch(NullPointerException ex){
            //Logger.getLogger(PanelRaiz.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Excepcion TableModel NULL");
        }
        System.out.println("\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n");
    }
    
    private EnumFuncion getFuncSelected(){
        if( rbtnFx1.isSelected() )
            return EnumFuncion.RAIZ_1;
        else if( rbtnFx2.isSelected() )
            return EnumFuncion.RAIZ_2;
        else if( rbtnFx3.isSelected() )
            return EnumFuncion.RAIZ_3;
        else if( rbtnFx4.isSelected() )
            return EnumFuncion.RAIZ_4;
        else
            return EnumFuncion.RAIZ_5;
    }
    private EnumFuncion getItemFuncDerivada(){
        if( rbtnFx1.isSelected() )
            return EnumFuncion.DERIV_1;
        else if( rbtnFx2.isSelected() )
            return EnumFuncion.DERIV_2;
        else if( rbtnFx3.isSelected() )
            return EnumFuncion.DERIV_3;
        else if( rbtnFx4.isSelected() )
            return EnumFuncion.DERIV_4;
        else
            return EnumFuncion.DERIV_5;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnEstablecerVista;
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JComboBox cboxMetodo;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFx1;
    private javax.swing.JLabel lblFx2;
    private javax.swing.JLabel lblFx3;
    private javax.swing.JLabel lblFx4;
    private javax.swing.JLabel lblFx5;
    private javax.swing.JLabel lblMetodo;
    private javax.swing.JLabel lblNumIter;
    private javax.swing.JLabel lblPunto0;
    private javax.swing.JLabel lblPunto1;
    private javax.swing.JLabel lblTolerancia;
    private javax.swing.JLabel lbl_xVista;
    private taylor.Plano plano;
    private javax.swing.JPanel pnlCardMetodo;
    private javax.swing.JPanel pnlControles;
    private javax.swing.JPanel pnlIntVista;
    private javax.swing.JPanel pnlOpciones;
    private raices.PanelPuntoFijo pnlPuntoFijo;
    private javax.swing.JPanel pnlSelecFuncion;
    private javax.swing.JRadioButton rbtnFx1;
    private javax.swing.JRadioButton rbtnFx2;
    private javax.swing.JRadioButton rbtnFx3;
    private javax.swing.JRadioButton rbtnFx4;
    private javax.swing.JRadioButton rbtnFx5;
    private javax.swing.JSpinner spinNumIter;
    private javax.swing.JTable tblDatos;
    private javax.swing.JTextField txtfPunto0;
    private javax.swing.JTextField txtfPunto1;
    private javax.swing.JTextField txtfResultado;
    private javax.swing.JTextField txtf_TolerBase;
    private javax.swing.JTextField txtf_TolerExp;
    private javax.swing.JTextField txtf_xMax;
    private javax.swing.JTextField txtf_xMin;
    // End of variables declaration//GEN-END:variables
}
